/*
 * Copyright (c) 2011-present Sonatype, Inc. All rights reserved.
 * Includes the third-party code listed at http://links.sonatype.com/products/clm/attributions.
 * "Sonatype" is a trademark of Sonatype, Inc.
 */
@Library(['private-pipeline-library', 'jenkins-shared', 'int-jenkins-shared']) _

String agentLabel = 'ubuntu-zion'

def runTests(String javaVersion = 'Java 8', String mavenExtra = '') {
  def config = mavenCommon(
      javaVersion: javaVersion,
      mavenVersion: 'Maven 3.6.x',
      useEventSpy: false
  )
  mvn config, "clean install ${mavenExtra}"
}

def captureResultsAndCleanup() {
  archiveArtifacts(artifacts: '**/target/*-reports/**')
  collectTestResults(['**/target/*-reports/*.xml'])
  deleteDir()
}

pipeline {
  agent none
  options {
    buildDiscarder(
        logRotator(numToKeepStr: '100', daysToKeepStr: '14', artifactNumToKeepStr: '20', artifactDaysToKeepStr: '10')
    )
    timestamps()
  }
  stages {
    stage('Parallel Test Groups') {
      parallel {
        stage('Jenkins 2.249.1 - Java 8') {
          agent { label agentLabel }
          steps {
            runTests('Java 8')
          }
          post {
            always {
              captureResultsAndCleanup()
            }
          }
        }
        stage('Jenkins 2.346.1 - Java 11') {
          agent { label agentLabel }
          steps {
            runTests('OpenJDK 11',
                '-Djenkins.version=2.346.1 -Djenkins.tools.bom.artifactId=bom-2.346.x -Djenkins.tools.bom.version=1461.vb_3c6de28f2b_a_')
          }
          post {
            always {
              captureResultsAndCleanup()
            }
          }
        }
      }
    }
  }
}
