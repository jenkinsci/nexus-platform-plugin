/*
 * Copyright (c) 2016-present Sonatype, Inc. All rights reserved.
 * Includes the third-party code listed at http://links.sonatype.com/products/nexus/attributions.
 * "Sonatype" is a trademark of Sonatype, Inc.
 */
@Library(['private-pipeline-library', 'jenkins-shared', 'int-jenkins-shared']) _
import com.sonatype.jenkins.pipeline.GitHub

def jira = [
    versionPrefix: 'jenkins', project: 'CLM', projectId: '10002',
    credentialId : 'atlassian-jenkins', autoRelease: true, failOnError: true
]

// Get nexus-jenkis-plugin version
def version = getVersionFromBuildName(env.releaseBuild_NAME)

def segments = parseVersionString(getVersionFromBuildName(env.releaseBuild_NAME))
def confluenceVersion = segments.join('.')

pipeline {
  agent { label 'ubuntu-zion' }
  tools {
    //here, Do I need to specify the Java version?
    //jdk 'Java 8'
  }
  options {
    buildDiscarder(
        logRotator(numToKeepStr: '100', artifactNumToKeepStr: '20')
    )
    timestamps()
  }
  stages {
    stage('Export Variables') {
      steps {
        exportBuildVariables(params.environment, env.releaseBuild_NAME)
      }
    }
    stage('Checkout Publishing Scripts') {
      steps {
        checkoutPublishingScripts()
      }
    }
    stage('Gather Build Artifacts') {
      steps {
        //this path is correct?
        gatherBuildArtifacts('integrations/jenkins/release', env.releaseBuild_NUMBER)
      }
    }
    stage('Publish') {
      steps {
        // the name is right or should it be nexus-jenkins-plugin?
        publishProduct('JenkinsPlugin')
      }
    }
    stage('Update latest version table') {
      steps {
        updateLatestVersionTable(params.environment, 'IQ_JENKINS', getVersionFromBuildName(env.releaseBuild_NAME))
      }
    }
    //is this step necessary?
    stage('Update nginx configuration') {
      steps {
        updateNginxConfig(params.environment)
      }
    }
    stage('Purge Fastly Download Cache') {
      steps {
        build job: 'ops/fastly-purge-downloads', propagate: true, wait: true
      }
    }
    stage('Verify Staging Links') {
      when {
        expression { 'Staging' == params?.environment }
      }
      steps {
        verifyDownloadLinks(
            urlParts: ['https://download-staging.sonatype.com/repository/downloads-staging-group/ci/bamboo/nexus-iq-jenkins-plugin-', version],
            urlSuffixes: ['.obr', '.obr.asc', '.obr.md5', '.obr.sha1']
        )
      }
    }
    stage('Verify Production Links') {
      when {
        expression { 'Production' == params?.environment }
      }
      steps {
        verifyDownloadLinks(
            urlParts: ['https://download.sonatype.com/clm/ci/nexus-iq-jenkins-plugin-', version],
            urlSuffixes: ['.obr', '.obr.asc', '.obr.md5', '.obr.sha1']
        )
      }
    }
    stage('Update Download and Compatibility Page') {
      when {
        expression { 'Production' == params.environment }
      }
      steps {
        updateDownloadPage([
            [   pattern:     /<span class="jenkins-version">[^<]+<\/span>/,
                replacement: /<span class="jenkins-version">${confluenceVersion}<\/span>/
            ],
            [   pattern:     /nexus-iq-jenkins-plugin-[-\d\.]+.obr/,
                replacement: /nexus-iq-jenkins-plugin-${version}.obr/
            ]
        ])
      }
    }
    stage('Release JIRA Version') {
      when {
        expression { 'Production' == params?.environment }
      }
      steps {
        // Release the Jira fix version for Integrations
        jiraSetFixVersion(jira, version)
      }
    }
  }
  post {
    always {
      notifyChat(currentBuild: currentBuild, env: env, room: 'ops-builds')
      notifyChat(currentBuild: currentBuild, env: env, room: 'int-builds')
      deleteDir()
    }
  }

}